1. DBCP
 - DataBase Connection Pool
 - 데이터베이스와 연결된 커넥션을 미리 만들어서
 저장해두고 있다가 필요할 때 저장된 공간(pool)
 에서 가져다 쓰고 반환하는 기법을 말한다.
 - 커넥션 풀은 이용하면 커넥션을 미리 만들어 두고
 사용하기 때문에 매번 사용자가 요청할 경우
 드라이버를 로드하고, 커넥션 객체를 생성해
 연결하고 졸효나는 비효율적인 작업을 하지 않아도
 된다.
 - 즉 데이터베이스의 부하를 줄일 수 있고
 자원을 효율적으로 관리할 수 있다.

2. JNDI(Java Naming and Directory Interface)
 - 디렉토리 서비스에서 제공하는 데이터 및 객체를
 발견하고 참고하기 위한 자바 API.
 - 외부(WAS)에 있는 객체를 가져오기 위한 기술 방법
 - DB Pool을 미리 Naming시켜두는 방법 
 (DB 연결 방법중 하나)
 - 우리가 저장해 놓은 WAS의 데이터베이스 정보에
 JNDI를 설정해 놓으면, 웹 어플리케이션은 JNDI만
 호출하면 간단하다.

 2-1. 사용하는 이유
  - 개발을 한 사람과 실제 서비스를 운영하는 담당자는
  다른경우가 많기 때문에, 소스 레벨에서 설정되어
  있는 것보다 WAS에서 설정되어 있는 것을 선호한다.
  - WAS에 여러개의 웹 어플리케이션을 올려서 사용하기
  때문에 WAS에서 한 번에 설정해 주는 것이 
  자원낭비를 줄일 수 있습니다.
  - 또한 장애가 나거나 성능이 정상적이지 못하면 다른
  한 서버가 대신 일을 해줄 수 있습니다.
  - 정리하자면 운여, 관리, 최적화 문제 대처에 다양한
  이점이 있기 때문에 JNDI를 사용한다.











